def libraryVersions = [
        kotlin          : '1.3.61',
        coroutines      : '1.3.3',

        javax           : '1',

        appCompat       : '1.1.0-alpha05',
        constraintLayout: '1.1.3',
        materialDesign  : '1.1.0-alpha05',
        recyclerView    : '1.1.0-alpha05',
        multidex        : '2.0.1',

        archComponents  : '2.2.0',

        ktx             : '1.1.0',

        dagger          : '2.25.4',

        junit           : '4.12',
        testRunner      : '1.2.0',
        androidXTestCore: '1.2.0',
        espresso        : '3.2.0-alpha03',
        junitExtVersion : '1.1.1',

        leekcanary      : '2.1',

        room            : '2.2.0',

        glide           : '4.9.0',

        retrofit        : '2.6.3',
        okHttp          : '3.14.1',
        moshiAdapter    : '2.5.0',
        moshi           : '1.9.2',

        crashlytics     : '17.0.0-beta01',
        analytics       : '17.2.0',
]

ext {
    kotlin = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${libraryVersions.kotlin}"

    javax = "javax.inject:javax.inject:${libraryVersions.javax}"

    coroutines = [
            core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${libraryVersions.coroutines}",
            android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:${libraryVersions.coroutines}"
    ]

    leekcanary = "com.squareup.leakcanary:leakcanary-android:${libraryVersions.leekcanary}"

    androidFrameworkDependencies = [
            appCompat       : "androidx.appcompat:appcompat:${libraryVersions.appCompat}",
            constraintlayout: "androidx.constraintlayout:constraintlayout:${libraryVersions.constraintLayout}",
            materialDesign  : "com.google.android.material:material:${libraryVersions.materialDesign}",
            recyclerView    : "androidx.recyclerview:recyclerview:${libraryVersions.recyclerView}",
            multidex        : "androidx.multidex:multidex:${libraryVersions.multidex}"
    ]

    archComponentsDependencies = [
            lifeCycle     : "androidx.lifecycle:lifecycle-extensions:${libraryVersions.archComponents}",
            lifeCycleKtx  : "androidx.lifecycle:lifecycle-runtime-ktx:${libraryVersions.archComponents}",
            liveDataKtx   : "androidx.lifecycle:lifecycle-livedata-ktx:${libraryVersions.archComponents}",
            viewModelScope: "androidx.lifecycle:lifecycle-viewmodel-ktx:${libraryVersions.archComponents}"
    ]
    archComponentsProcessorDependencies = [
            lifeCycleProcessor: "androidx.lifecycle:lifecycle-compiler:${libraryVersions.archComponents}"
    ]

    ktxDependencies = [
            core: "androidx.core:core-ktx:${libraryVersions.ktx}"
    ]

    daggerDependencies = [
            dagger: "com.google.dagger:dagger:${libraryVersions.dagger}",
    ]
    daggerProcessorDependencies = [
            daggerProcessor: "com.google.dagger:dagger-compiler:${libraryVersions.dagger}"
    ]

    testDependencies = [
            junit: "junit:junit:${libraryVersions.junit}"
    ]

    androidTestDependencies = [
            testRunner: "androidx.test:runner:${libraryVersions.testRunner}",
            espresso  : "androidx.test.espresso:espresso-core:${libraryVersions.espresso}",
            core      : "androidx.test:core:${libraryVersions.androidXTestCore}",
            rules     : "androidx.test:rules:${libraryVersions.androidXTestCore}",
            junitExt  : "androidx.test.ext:junit:${libraryVersions.junitExtVersion}"
    ]

    room = [
            database: "androidx.room:room-runtime:${libraryVersions.room}",
            ktx     : "androidx.room:room-ktx:${libraryVersions.room}"
    ]
    roomProcessor = [
            databaseProcessor: "androidx.room:room-compiler:${libraryVersions.room}"
    ]

    glide = [
            glide: "com.github.bumptech.glide:glide:${libraryVersions.glide}"
    ]

    jsonSerializer = [
            moshi: "com.squareup.moshi:moshi:${libraryVersions.moshi}"
    ]
    jsonSerializerProcessor = [
            moshi: "com.squareup.moshi:moshi-kotlin-codegen:${libraryVersions.moshi}"
    ]

    networkDependencies = [
            retrofit    : "com.squareup.retrofit2:retrofit:${libraryVersions.retrofit}",
            moshiAdapter: "com.squareup.retrofit2:converter-moshi:${libraryVersions.moshiAdapter}",
            log         : "com.squareup.okhttp3:logging-interceptor:${libraryVersions.okHttp}",
            okHttp      : "com.squareup.okhttp3:okhttp:${libraryVersions.okHttp}"
    ]

    firebaseDependencies = [
            crashlythics: "com.google.firebase:firebase-crashlytics:${libraryVersions.crashlytics}",
            analytics   : "com.google.firebase:firebase-analytics:${libraryVersions.analytics}"
    ]
}
